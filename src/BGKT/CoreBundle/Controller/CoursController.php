<?php

namespace BGKT\CoreBundle\Controller;


use BGKT\CoreBundle\Form\CoursEditType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\File\File;
use BGKT\CoreBundle\Entity\Cours;
use BGKT\CoreBundle\Form\CoursType;
use  BGKT\CoreBundle\Service\FileUploader;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Validator\Constraints\DateTime;

class CoursController extends Controller
{

    /**
     * @Route("/cours/ajouter", name="user_ajouter_cours")
     */
    public function newAction(Request $request)
    {
        $cours = new Cours();
        $form = $this->createForm(CoursType::class, $cours);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            $user = $this->get('security.token_storage')->getToken()->getUser();
            $userNomDepositaire = $this->get('security.token_storage')->getToken()->getUser()->getPrenom() . " " . $this->get('security.token_storage')->getToken()->getUser()->getNom();

            $cours->setUser($user);
            $cours->setNomDepositaire($userNomDepositaire);
            $cours->setDate(new \DateTime());
            $cours = $this->get('core.file_uploader')->upload($cours);


            $em = $this->getDoctrine()->getManager();
            $em->persist($cours);
            $em->flush();
            return $this->redirect($this->generateUrl('user_liste_cours'));
        }

        return $this->render('BGKTCoreBundle:cours:ajouterCours.html.twig', array(
            'form' => $form->createView(),
        ));
    }

    /**
     * @param Cours $cours
     * @return \Symfony\Component\HttpFoundation\RedirectResponse
     */
    public function deleteAction(Cours $cours)
    {
        if (!$cours) {
            throw $this->createNotFoundException('Cours non trouvé.');
        }

        $filename = $cours->getDocument();
        $fs = new Filesystem();
        $fs->remove($this->get('kernel')->getRootDir() . '/../web/uploads/cours/' . $filename);
        $em = $this->getDoctrine()->getManager();
        $em->remove($cours);
        $em->flush();

        return $this->redirect($this->generateUrl('user_liste_cours'));
    }

    /**
     * @param Request $request
     * @param Cours $cours
     * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpFoundation\Response
     */
    public function editAction(Request $request, Cours $cours)
    {

        $old = $cours->getDocument();
        $cours->setDocument(
            new File($this->getParameter('cours_directory') . '/' . $cours->getDocument())
        );
        $new = $cours->getDocument();


        $form = $this->createForm(CoursEditType::class, $cours);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            if ($old != $new) {
                unlink($new);
            }
            $cours = $this->get('core.file_uploader')->upload($cours);


            $em = $this->getDoctrine()->getManager();
            $em->persist($cours);
            $em->flush();


            return $this->redirect($this->generateUrl('user_liste_cours'));
        }

        return $this->render('BGKTCoreBundle:cours:modifierCours.html.twig', array(
            'cours' => $cours,
            'form' => $form->createView()
        ));
    }


    /**
     * Afficher les cours dans la vue prévue à cet effet
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function displayAction()
    {
        $userId = $this->get('security.token_storage')->getToken()->getUser()->getId();

        $lstCoursProf = $this->getDoctrine()->getManager()->getRepository('BGKTCoreBundle:Cours')->findAllByProfesseur($userId);
        $lstCours = $this->getDoctrine()->getManager()->getRepository('BGKTCoreBundle:Cours')->findAll();

        return $this->render('BGKTCoreBundle:cours:listeCours.html.twig', array('lstCours' => $lstCours, 'lstCoursProf' => $lstCoursProf));
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
